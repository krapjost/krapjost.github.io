<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>clojure on 정원</title><link>http://krapjost.github.io/ko/tags/clojure/</link><description>Recent content in clojure on 정원</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 14 Nov 2022 14:41:00 +0900</lastBuildDate><atom:link href="http://krapjost.github.io/ko/tags/clojure/index.xml" rel="self" type="application/rss+xml"/><item><title>221114144112 소설 연재 플랫폼 개발 일지 008 Ko 소설 연재 플랫폼 개발 일지 008</title><link>http://krapjost.github.io/ko/posts/221114144112-%EC%86%8C%EC%84%A4_%EC%97%B0%EC%9E%AC_%ED%94%8C%EB%9E%AB%ED%8F%BC_%EA%B0%9C%EB%B0%9C_%EC%9D%BC%EC%A7%80_008-ko/</link><pubDate>Mon, 14 Nov 2022 14:41:00 +0900</pubDate><guid>http://krapjost.github.io/ko/posts/221114144112-%EC%86%8C%EC%84%A4_%EC%97%B0%EC%9E%AC_%ED%94%8C%EB%9E%AB%ED%8F%BC_%EA%B0%9C%EB%B0%9C_%EC%9D%BC%EC%A7%80_008-ko/</guid><description>프론트 페이지 라우팅 작업이 끝나고 백엔드 데이터 베이스 구조를 고민하고 있다. 추천 알고리즘을 구현해보고 싶어 조사 중 그래프DB를 알게되어서 공부 중.
소설 연재 플랫폼이면서 동시에 소셜 네트워킹 플랫폼의 역할도 했으면 좋겠다. 내가 좋아하는 소설, 그 소설을 좋아하는 유저들, 그 유저들이 좋아하는 소설. 내가 좋아하는 소설을 쓴 작가가 좋아하는 소설.
좋아한다는게 무엇인지에 대한 생각도 해야할 것 같다. 좋아요를 눌러놓고 잘 보지 않게 되는 글도 있고 그냥 보다보니 끝까지 보게되는 글도 있으니까.</description></item><item><title>소설 연재 플랫폼 개발 일지 007</title><link>http://krapjost.github.io/ko/posts/221112235354-%EC%86%8C%EC%84%A4_%EC%97%B0%EC%9E%AC_%ED%94%8C%EB%9E%AB%ED%8F%BC_%EA%B0%9C%EB%B0%9C_%EC%9D%BC%EC%A7%80_007-ko/</link><pubDate>Sat, 12 Nov 2022 23:53:00 +0900</pubDate><guid>http://krapjost.github.io/ko/posts/221112235354-%EC%86%8C%EC%84%A4_%EC%97%B0%EC%9E%AC_%ED%94%8C%EB%9E%AB%ED%8F%BC_%EA%B0%9C%EB%B0%9C_%EC%9D%BC%EC%A7%80_007-ko/</guid><description>배운 것 # wallmart에서 개발한 graphQL clojure 구현체 lacinia. 그린랩스에서도 이것을 쓰고 있다. graphQL은 정말 편하다. 성능? 성능 이슈에 대한 글도 있지만 DB를 그래프DB를 쓰면 신경쓰지 않아도 되지 않을까 하는 생각이 든다. RDB에서는 복잡한 쿼리를 한 번에 수행하는데 지수 시간이 걸리지만 그래프DB는 상수 시간으로 쿼리할 수 있다. 어쨌거나 모바일 우선 앱을 만들고 싶기 때문에 graphQL은 좋은 선택이 될 것 같다. Web client &amp;lt;-&amp;gt; http-server &amp;lt;-&amp;gt; graphql resolver &amp;lt;-&amp;gt; docker(datalevin)</description></item><item><title>cider로 repl 연결하기</title><link>http://krapjost.github.io/ko/posts/221025170044-cider%EB%A1%9C_repl_%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0-ko/</link><pubDate>Tue, 25 Oct 2022 17:00:00 +0900</pubDate><guid>http://krapjost.github.io/ko/posts/221025170044-cider%EB%A1%9C_repl_%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0-ko/</guid><description>refs # 이름공간 변경하기 clj tool로 REPL 시작하기 # 이런 deps.edn 파일이 있다고 했을 때
{:aliases {:dev {...} :test {...}}} 다음 명령어로 aliases와 함께 REPL을 실행할 수 있다.
clj -M:dev:test # 혹은 clj -A:dev:test Namespace 사용하기 # clojure 프로젝트는 ns(namespace)로 스코프를 분리하고 있다. repl 환경에서 (ns dev.server) 을 실행하면 해당 ns를 만들고, 그 공간으로 넘어간다. 이 때 이전 공간에서 선언했던 이름들에는 접근할 수 없다.
user=&amp;gt; (def x 42) #&amp;#39;user/x user=&amp;gt; x 42 user=&amp;gt; (ns server) nil server=&amp;gt; server=&amp;gt; x Syntax error compiling at (REPL:0:0).</description></item><item><title>소설 연재 플랫폼 개발 일지 003</title><link>http://krapjost.github.io/ko/posts/221025110630-%EC%86%8C%EC%84%A4_%EC%97%B0%EC%9E%AC_%ED%94%8C%EB%9E%AB%ED%8F%BC_%EA%B0%9C%EB%B0%9C_%EC%9D%BC%EC%A7%80_003-ko/</link><pubDate>Tue, 25 Oct 2022 11:06:00 +0900</pubDate><guid>http://krapjost.github.io/ko/posts/221025110630-%EC%86%8C%EC%84%A4_%EC%97%B0%EC%9E%AC_%ED%94%8C%EB%9E%AB%ED%8F%BC_%EA%B0%9C%EB%B0%9C_%EC%9D%BC%EC%A7%80_003-ko/</guid><description>목표 # 타 연재 플랫폼 웹 클라이언트에서 서버 데이터 어떤 형식으로 가져오는지 확인할 것 그 형식에 맞춰 API 변경하기 lispy 사용해서 repl 연결하기, repl 활용하는 방법들 익숙해지기 garden으로 css 적용하기 i18n 한국어 영어까지 하기, 접속자 ip 위치에 따라 다른 언어 제공하기 과정 # 후기 # 이 날은 기록을 안했다. 반성. 하루 목표를 투두 리스트로 작성한 것은 잘했다. 다시 시도해보자.</description></item></channel></rss>
<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>ilgi</title>
	<subtitle>Krapjost&#x27;s blog site.</subtitle>
	<link href="https://krapjost.github.io/blog/feed.xml" rel="self" type="application/atom+xml"/>
    <link href="https://krapjost.github.io/blog/"/>
	<updated>2022-05-04T00:00:00+00:00</updated>
	<id>https://krapjost.github.io/blog/feed.xml</id>
	<entry xml:lang="en">
		<title>어떤 프로그래밍 언어를 배워볼까</title>
		<published>2022-05-04T00:00:00+00:00</published>
		<updated>2022-05-04T00:00:00+00:00</updated>
		<link href="https://krapjost.github.io/blog/programming-languages/" type="text/html"/>
		<id>https://krapjost.github.io/blog/programming-languages/</id>
		<content type="html">&lt;p&gt;서버 공부를 하고 싶은데 엘릭서, 고, 러스트 중에 고민 중.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hamsuhyeong-heoeoreul-ggonbuhago-ssida&quot;&gt;함수형 언어를 공부하고 싶다.&lt;&#x2F;h3&gt;
&lt;p&gt;엘릭서, 고, 러스트 모두 함수형을 지원하지만 엘릭서는 그 중 함수형 사고방식에 감을 익히기 제일 좋을 것 같다. 
내가 가장 생산성과 행복도가 높아지는 패러다임을 찾아야 한다. 아직 뭘 모르니까 이것저것 알아보는 중인데 함수형이 젤 멋지고 읽고 쓰기 편한 것 같다. 
OOP도 데이터 모델 작성할 때 편한 것 같다. 그래서 멀티 패러다임 언어가 인기를 얻는 것 같다. &lt;&#x2F;p&gt;
&lt;p&gt;데이터 가공하고 주고 받을 때는 함수형으로 하고 데이터의 틀을 만드는 것은 OOP로 하는 식으로.
근데 순수 함수형으로는 어떻게 짜여지는지 궁금하다. 클래스나 함수나 사실 거기서 거기인가?&lt;&#x2F;p&gt;
&lt;p&gt;객체형 사고방식은 자동차 전체를 추상화 시켜서 자동차가 할 수 있는 행동들과 자동자가 가지고 있는
속성들을 블루프린트마냥 적어놓고 필요할 때마다 불러서 자동차를 찍어내는 방식이면
함수형으로는 바퀴(반지름, 소재) {}, 창문(두께, 소재) {}, 이런 식으로 작은 부품들을 어디서든 사용할 수 있도록
작은 데서부터 출발하는 그런 느낌인가?&lt;&#x2F;p&gt;
&lt;p&gt;아예 전역 변수가 한 번도 안 쓰이고 데이터가 함수들을 통해서만 이동한다는 데 진짜 멋진 것 같다. &lt;&#x2F;p&gt;
&lt;p&gt;엘릭서가 지금 제일 끌리는데 이유를 정리해보면&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;엘릭서 코드의 |&amp;gt; 파이프 연산자가 이뻐보인다.&lt;&#x2F;li&gt;
&lt;li&gt;함수형에 제일 가깝다.&lt;&#x2F;li&gt;
&lt;li&gt;하이레벨이라 고, 러스트보다 쉽고 빠르게 개발할 수 있을 것 같다.&lt;&#x2F;li&gt;
&lt;li&gt;한 번에 많은 요청을 처리하는 병렬성은 엘릭서가 가장 강할 것 같다.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;성능은 러스트 &amp;gt; 고 &amp;gt; 엘릭서라고 한다.&lt;&#x2F;p&gt;
&lt;p&gt;고와 엘릭서의 병렬 처리는 언어가 제공하는 가상 쓰레드로 처리하는 반면
러스트는 실제 머신 쓰레드에서 직접 돌아가기 때문에 비용이 덜 든다고 한다.
사실 무슨 말인지 잘 모르겠다.&lt;&#x2F;p&gt;
&lt;p&gt;엘릭서는 바이트 코드로 컴파일 되어 BEAM 가상 머신 위에서 돌아간다고 하니 
대충은 알겠는데 고는 바이너리로 컴파일 되는데도 그렇다고 하니 이해가 잘 안된다.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>더 나은 사람</title>
		<published>2022-05-03T00:00:00+00:00</published>
		<updated>2022-05-03T00:00:00+00:00</updated>
		<link href="https://krapjost.github.io/blog/meditation/" type="text/html"/>
		<id>https://krapjost.github.io/blog/meditation/</id>
		<content type="html">&lt;h1 id=&quot;naneun-acime-ileonaya-handa&quot;&gt;나는 아침에 일어나야 한다.&lt;&#x2F;h1&gt;
&lt;p&gt;아무리 피곤해도 지켜야 하는 것 중 하나를 생활 리듬으로 둬야겠다.
밤에 이런 저런 창의적인 생각이 많이 드는 것은 맞지만 흐리멍텅한 상태라 그런 것 같다.
동시에 부정적인 생각도 많이 든다. 아무래도 아침이 낫다. 기분도 좋다. 기분이 좋다는게 중요하다.
기분이 좋으면 생각만 하던 것들을 실제로 하게 된다.
오늘만 보면 만들어놓고 쓰지도 않던 블로그 글을 적고 있다.
사실 밤새 침대에서 뒤척이다가 갑자기 든 절실한 마음에 무릎꿇고 기도 한 번 하려다 뭘 기도해야 될지도 몰라서 그냥 멍 때리다 빨래 널고 책읽다 나왔다.
머리는 멍하지만 기분이 좋그등요. 다시 클라이밍도 하고 싶어졌다. 책도 다시 읽고 싶어졌다.
만화를 그려볼까 한다. 뒤죽박죽 먼지 투성이 내 머릿 속을 캐릭터화해서 &#x27;내 의지가 나약한 이유와 그에 대한 해결 방안&#x27;, &#x27;오늘 읽은 책, 짧은 감상&#x27;,
뭐 이런 주제로 인스타 컷 만화를 그리고 싶다.
개발 중인 태스크 매니저 앱의 마스코트 캐릭터로 삼고 브랜딩과 홍보도 겸해서.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;oneul-caeghilda-neuggin-nae-munje&quot;&gt;오늘 책읽다 느낀 내 문제&lt;&#x2F;h3&gt;
&lt;ol&gt;
&lt;li&gt;나는 나에게 너무 많은 걸 기대한다.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;기대가 지속적인 발전으로 이어지지 않는 이유는 내가 부응하지 못할 비현실적인 기대이기 때문이다. 비현실적인 기대는 실망으로 이어진다. 
부족함을 인정하고 현실적인 기대를 하자. 이해되지도 않은 문장인데 이런 것도 이해못하는 내 모습이 싫어서 그냥 이해한 척 넘기고 그랬다.
그러다보니 재미도 없고 배우는 것도 없었다. 나 자신을 속이면 안된다. &lt;strong&gt;나는 항상 내 기대보다 못하다&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>flutter firebase auth 설정</title>
		<published>2022-03-05T00:00:00+00:00</published>
		<updated>2022-03-05T00:00:00+00:00</updated>
		<link href="https://krapjost.github.io/blog/flutter-firebase-android-auth/" type="text/html"/>
		<id>https://krapjost.github.io/blog/flutter-firebase-android-auth/</id>
		<content type="html">&lt;h1 id=&quot;don-t-forget&quot;&gt;don&#x27;t forget!&lt;&#x2F;h1&gt;
&lt;p&gt;Android needs to setup SHA certificate on project settings page on firebase.
to get SHA for debug, type&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;keytool -list -v \ -alias androiddebugkey -keystore ~&#x2F;.android&#x2F;debug.keystore&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;default password is &#x27;android&#x27;&lt;&#x2F;p&gt;
&lt;p&gt;&#x27;Firebase는 두 가지 유형의 인증서 지문을 지원합니다.
SHA-1: 앱에 대한 API 키와 OAuth 2 클라이언트를 만드는 데 사용됩니다.
SHA-256: Firebase 동적 링크를 구성하는 데 사용됩니다.&#x27;&lt;&#x2F;p&gt;
&lt;p&gt;copy paste these keys and download google-services.json again.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;you-probably-should-do-something-more-on-product-mode-don-t-forget&quot;&gt;you probably should do something more on product mode! don&#x27;t forget!&lt;&#x2F;h2&gt;
</content>
	</entry>
</feed>